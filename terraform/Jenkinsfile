node {



notify('Started')



try {



// Get Artifactory server instance, defined in the Artifactory Plugin administration page.

    def server = Artifactory.server "01"

    def buildInfo = Artifactory.newBuildInfo() 





stage('GitCheckOut') {

git branch: 'terraform', credentialsId: '01', url: 'https://github.com/jyothi-hs/Petclini-Repo.git'

}









stage('Build Managment') {

      def downloadSpec = """{

	 "files": [

	{

	"pattern": "petclinic-war/*.war",

	"target": "ansible-code/roles/petclinic/files/"

        }

	]

	}"""

	server.download spec: downloadSpec

 }





stage('Getting Ready for Ansible Deploy'){

   sh "echo \'<h1> TASK BUILD ID: ${env.BUILD_DISPLAY_NAME}</h1>\'  > ansible-code/roles/petclinic/files/jenkins.html"

  }



stage('Deployment via terraform'){

   sh 'terraform init'

   sh 'terraform apply --auto-approve'

  }



  notify('Completed')

} catch(err){

  notify("Error ${err}")

  currentBuild.result = 'FAILURE'

 }

}



def notify(status){

    emailext(

    to: "jyothikahsgowda@gmail.com",

    subject: "${status} :JOB '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",

    body:"""<p>${status}: :JOB '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>

            <p>Check Console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",

    )

}
